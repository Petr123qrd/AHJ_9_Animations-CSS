(()=>{"use strict";(new class{constructor(){this.container=document.querySelector(".content")}init(){document.addEventListener("DOMContentLoaded",(()=>{this.initWidget()}))}initWidget(){this.container&&(this.container.insertAdjacentHTML("beforeEnd",'\n    <div data-widget="widgetCollapsible" class="widget widget_collapsible">       \n      <div class="widget_controls"> \n        <button data-id="widgetButton" class="widget_button">Collapse</button> \n      </div>\n      <div data-id="widgetFooter" class="widget_footer collapsed">         \n        <div class="widget_footer_string">\n        Collapse\nLegend\nAs part of the implementation of a large portal, you need to make a widget "collapsible"-containers that can expand and collapse.        \n        </div>\n      </div> \n    </div>\n    '),this.container.querySelector("[data-widget=widgetCollapsible]").addEventListener("click",(t=>{if("widgetButton"!==t.target.dataset.id)return;const e=t.currentTarget.querySelector("[data-id=widgetFooter]");e.classList.toggle("collapsed"),e.classList.toggle("show")})))}}).init()})();